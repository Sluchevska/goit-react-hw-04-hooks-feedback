{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/SectionTitle/SectionTitle.styled.js","components/SectionTitle/SectionTitle.js","components/Notification/Notification.styled.js","components/Notification/Notification.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["Button","styled","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","StatSection","section","Container","div","Ul","ul","Li","li","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","SectionTitle","title","children","NotificationText","p","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","prevGood","prevNeutral","prevBad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAEaA,EAASC,IAAOC,OAAV,wO,OCEJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACrB,cAACP,EAAD,CAAQQ,KAAK,SAAsBC,QAAS,kBAAMJ,EAAgBE,IAAlE,SACCA,GAD0BA,MCJ1B,I,EAAMG,EAAcT,IAAOU,QAAV,8FAMXC,EAAYX,IAAOY,IAAV,mDAGTC,EAAKb,IAAOc,GAAV,0DAIFC,EAAKf,IAAOgB,GAAV,qOCVA,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,cAACX,EAAD,UAEI,cAACF,EAAD,UACE,eAACI,EAAD,WAEA,eAACE,EAAD,oBAAWG,EAAX,OACA,eAACH,EAAD,uBAAcI,EAAd,OACA,eAACJ,EAAD,mBAAUK,EAAV,OACA,eAACL,EAAD,qBAAYM,EAAZ,OACA,eAACN,EAAD,iCAAwBO,EAAxB,eCrBH,I,EAAMC,EAAQvB,IAAOwB,GAAV,yFCEH,SAASC,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC5C,OACE,oCACE,cAACJ,EAAD,UAAQG,IACPC,KCNA,I,EAAMC,EAAmB5B,IAAO6B,EAAV,iECEd,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,cAACH,EAAD,UAAmBG,ICFrB,IAAMpB,EAAYX,IAAOY,IAAV,4C,MCMP,SAASoB,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBgB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOb,EAAP,KAAYgB,EAAZ,KAkBMC,EAAqB,WACzB,OAAOnB,EAAOC,EAAUC,GAQpBC,EAAQgB,IACRf,EANkC,SAAAD,GAEtC,OADAA,EAAQgB,IACDC,KAAKC,MAAc,IAAPrB,EAAcG,GAIRmB,CAAgCnB,GAC3D,OACE,eAAC,EAAD,WACE,cAACI,EAAD,CAAcC,MAAM,wBAApB,SACE,cAACxB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAhCgB,SAAAE,GACtB,OAAQA,GACN,IAAK,OACH4B,GAAQ,SAAAO,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHN,GAAW,SAAAO,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHN,GAAO,SAAAO,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,aAuBF,cAAClB,EAAD,CAAcC,MAAM,aAApB,SACGL,EAAQ,EACP,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAACQ,EAAD,CAAcC,QAAQ,2BCpDhCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.427fe04b.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Button = styled.button`\r\nmargin: 10px;\r\ntext-transform: uppercase;\r\nfont-size: 14px;\r\npadding: 15px;\r\ncolor: rgb(85, 42, 85);\r\nfont-weight: 600;\r\nbox-shadow: 4px 5px 8px rgb(85, 42, 85);\r\n border-radius: 5px;\r\n cursor: pointer;\r\n`","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Button } from './FeedbackOptions.styled';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return options.map(option => (\r\n      <Button type=\"button\" key={option} onClick={() => onLeaveFeedback(option)}>\r\n      {option}\r\n    </Button>\r\n  ));\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  handleIncrement: PropTypes.func,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StatSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  padding-left: 10px;\r\n`;\r\nexport const Ul = styled.ul`\r\n  padding-inline-start: 0px;\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  border: 1px solid rgb(85, 42, 85);\r\n  color: black;\r\n  margin-bottom: 5px;\r\n  padding: 10px;\r\n  width: 300px;\r\n  box-shadow: 5px 6px 9px rgb(85, 42, 85);\r\n  border-radius: 5px;\r\n  list-style: none;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { StatSection } from './Statistics.styled';\r\nimport { Container } from './Statistics.styled';\r\nimport { Li, Ul } from './Statistics.styled';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <Container>\r\n      {\r\n        <StatSection>\r\n          <Ul>\r\n\r\n          <Li>Good: {good} </Li>\r\n          <Li>Neutral: {neutral} </Li>\r\n          <Li>Bad: {bad} </Li>\r\n          <Li>Total: {total} </Li>\r\n          <Li>Positive Feedback: {positivePercentage}% </Li>\r\n          </Ul>\r\n        </StatSection>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import styled from '@emotion/styled';\r\nexport const Title = styled.h2`\r\n  font-size: 24px;\r\n  margin-left: 13px;\r\n  color: #2d012d;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Title } from './SectionTitle.styled';\r\n\r\nexport default function SectionTitle({ title, children }) {\r\n  return (\r\n    <section>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\nexport const NotificationText = styled.p`\r\nmargin-left: 15px;\r\ncolor: #2d012d;\r\n`","import PropTypes from 'prop-types';\r\nimport { NotificationText } from './Notification.styled';\r\n\r\nexport default function Notification({ message }) {\r\n  return <NotificationText>{message}</NotificationText>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\npadding: 20px;\r\n`\r\n","import React, { useState } from 'react';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport SectionTitle from '../SectionTitle/SectionTitle';\nimport Notification from '../Notification/Notification';\nimport { Container } from './App.styled';\nimport './App.css';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = option => {\n    switch (option) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = total => {\n    total = countTotalFeedback();\n    return Math.round((good * 100) / total);\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage(total);\n  return (\n    <Container>\n      <SectionTitle title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </SectionTitle>\n      <SectionTitle title=\"Statistics\">\n        {total > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </SectionTitle>\n    </Container>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}